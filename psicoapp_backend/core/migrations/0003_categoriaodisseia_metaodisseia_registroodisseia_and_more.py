# Generated by Django 5.2.5 on 2025-08-31 20:42

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
        ('core', '0002_categoriamensagem_sementecuidado_mensagempaciente_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaOdisseia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome da Categoria')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descri√ß√£o')),
                ('icone', models.CharField(choices=[('happy', 'Feliz'), ('sad', 'Triste'), ('angry', 'Bravo'), ('anxious', 'Ansioso'), ('calm', 'Calmo'), ('excited', 'Animado'), ('confused', 'Confuso'), ('grateful', 'Grato'), ('hopeful', 'Esperan√ßoso'), ('frustrated', 'Frustrado')], default='happy', max_length=20, verbose_name='√çcone')),
                ('cor', models.CharField(choices=[('#FFD700', 'Dourado - Alegria'), ('#FF6B6B', 'Vermelho - Raiva'), ('#4ECDC4', 'Azul Claro - Calma'), ('#45B7D1', 'Azul - Tristeza'), ('#96CEB4', 'Verde - Esperan√ßa'), ('#FFEAA7', 'Amarelo - Ansiedade'), ('#DDA0DD', 'Roxo - Reflex√£o'), ('#F0A3FF', 'Rosa - Amor'), ('#FFA07A', 'Salm√£o - Gratid√£o'), ('#98D8C8', 'Verde √Ågua - Paz')], default='#FFD700', max_length=7, verbose_name='Cor')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Categoria de Odisseia',
                'verbose_name_plural': 'Categorias de Odisseia',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='MetaOdisseia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='T√≠tulo da Meta')),
                ('descricao', models.TextField(verbose_name='Descri√ß√£o da Meta')),
                ('status', models.CharField(choices=[('em_andamento', 'Em Andamento'), ('concluida', 'Conclu√≠da'), ('pausada', 'Pausada'), ('cancelada', 'Cancelada')], default='em_andamento', max_length=20, verbose_name='Status')),
                ('data_criacao', models.DateField(auto_now_add=True)),
                ('data_prevista', models.DateField(verbose_name='Data Prevista para Conclus√£o')),
                ('data_conclusao', models.DateField(blank=True, null=True, verbose_name='Data de Conclus√£o')),
                ('progresso', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Progresso (%)')),
                ('observacoes_progresso', models.TextField(blank=True, null=True, verbose_name='Observa√ß√µes sobre o Progresso')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metas_odisseia', to='authentication.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Meta de Odisseia',
                'verbose_name_plural': 'Metas de Odisseia',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='RegistroOdisseia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_registro', models.DateField(verbose_name='Data do Registro')),
                ('hora_registro', models.TimeField(verbose_name='Hora do Registro')),
                ('situacao', models.TextField(help_text='Descreva o que estava acontecendo', verbose_name='Situa√ß√£o')),
                ('local', models.CharField(blank=True, help_text='Onde voc√™ estava?', max_length=100, null=True, verbose_name='Local')),
                ('humor_geral', models.CharField(choices=[('muito_triste', 'Muito Triste üò¢'), ('triste', 'Triste üòî'), ('neutro', 'Neutro üòê'), ('feliz', 'Feliz üôÇ'), ('muito_feliz', 'Muito Feliz üòÑ')], default='neutro', max_length=20, verbose_name='Humor Geral')),
                ('intensidade_emocao', models.PositiveSmallIntegerField(choices=[(1, 'Muito Baixa'), (2, 'Baixa'), (3, 'Moderada'), (4, 'Alta'), (5, 'Muito Alta')], default=3, verbose_name='Intensidade da Emo√ß√£o')),
                ('pensamentos', models.TextField(help_text='O que passou pela sua cabe√ßa?', verbose_name='Pensamentos')),
                ('pensamentos_automaticos', models.TextField(blank=True, help_text='Pensamentos que surgiram automaticamente', null=True, verbose_name='Pensamentos Autom√°ticos')),
                ('reacoes_fisicas', models.TextField(blank=True, help_text='Como seu corpo reagiu? (tens√£o, respira√ß√£o, etc.)', null=True, verbose_name='Rea√ß√µes F√≠sicas')),
                ('comportamento', models.TextField(blank=True, help_text='Como voc√™ agiu nesta situa√ß√£o?', null=True, verbose_name='Comportamento')),
                ('gatilhos', models.TextField(blank=True, help_text='O que pode ter desencadeado essas emo√ß√µes?', null=True, verbose_name='Gatilhos Identificados')),
                ('estrategias_enfrentamento', models.TextField(blank=True, help_text='O que voc√™ fez para lidar com a situa√ß√£o?', null=True, verbose_name='Estrat√©gias de Enfrentamento')),
                ('aprendizados', models.TextField(blank=True, help_text='O que voc√™ aprendeu com esta experi√™ncia?', null=True, verbose_name='Aprendizados')),
                ('nivel_ansiedade', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='N√≠vel de Ansiedade (0-10)')),
                ('nivel_estresse', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='N√≠vel de Estresse (0-10)')),
                ('nivel_energia', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='N√≠vel de Energia (0-10)')),
                ('observacoes_adicionais', models.TextField(blank=True, null=True, verbose_name='Observa√ß√µes Adicionais')),
                ('compartilhar_psicologo', models.BooleanField(default=True, help_text='Permitir que o psic√≥logo veja este registro', verbose_name='Compartilhar com Psic√≥logo')),
                ('privado', models.BooleanField(default=False, help_text='Registro apenas para reflex√£o pessoal', verbose_name='Registro Privado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registros', to='core.categoriaodisseia', verbose_name='Categoria')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_odisseia', to='authentication.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Registro de Odisseia',
                'verbose_name_plural': 'Registros de Odisseia',
                'ordering': ['-data_registro', '-hora_registro'],
            },
        ),
        migrations.CreateModel(
            name='ComentarioPsicologo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.TextField(verbose_name='Coment√°rio')),
                ('tipo_comentario', models.CharField(choices=[('observacao', 'Observa√ß√£o'), ('orientacao', 'Orienta√ß√£o'), ('reflexao', 'Reflex√£o'), ('elogio', 'Elogio'), ('sugestao', 'Sugest√£o')], default='observacao', max_length=20, verbose_name='Tipo de Coment√°rio')),
                ('importante', models.BooleanField(default=False, verbose_name='Coment√°rio Importante')),
                ('lido_paciente', models.BooleanField(default=False, verbose_name='Lido pelo Paciente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('psicologo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios_registros', to='authentication.psicologo', verbose_name='Psic√≥logo')),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios_psicologo', to='core.registroodisseia', verbose_name='Registro')),
            ],
            options={
                'verbose_name': 'Coment√°rio do Psic√≥logo',
                'verbose_name_plural': 'Coment√°rios do Psic√≥logo',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='registroodisseia',
            index=models.Index(fields=['data_registro'], name='core_regist_data_re_5416b9_idx'),
        ),
        migrations.AddIndex(
            model_name='registroodisseia',
            index=models.Index(fields=['humor_geral'], name='core_regist_humor_g_7343f3_idx'),
        ),
        migrations.AddIndex(
            model_name='registroodisseia',
            index=models.Index(fields=['intensidade_emocao'], name='core_regist_intensi_25d199_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='registroodisseia',
            unique_together={('paciente', 'data_registro', 'hora_registro')},
        ),
    ]
